#!/bin/bash


# Private Functions
__fail() {
    __test "FAIL: $1"  && exit 2
}

__test() {
    Checks+="\t- $1\n"
    echo -e "$1\n"
}


# Public Functions 
pr() {
    cd $WORKDIR
    currentbranch=$(git branch | grep ^* | sed 's/^.* //g')
    branch="${2:-$currentbranch}"
    echo "Running as $(whoami)@${qasite} $(pwd)($branch) (and $qarepo for Algolia and DB)"
    clearc 
    git fetch && git checkout -fq $defaultbranch
    git pull
    git branch | grep -v "$defaultbranch" | xargs git branch -D >/dev/null 2>&1 | egrep -v "^error: branch"
    if [ "$branch" != "$defaultbranch" ];then
        git checkout $branch
        git pull
        git merge -m "Merge $defaultbranch" $defaultbranch
    fi
    grep -r "<<<< HEAD" && __fail "Address conflicts" ||  __test "No conflicts"
    CurrentBranch="$(git branch | grep '^*' | sed 's/^..//g')"
    [ "$CurrentBranch" == "$branch" ]  && __test "Successfully switched to $CurrentBranch" || __fail "Could not switch to $branch (currently $CurrentBranch)"
    composer install --no-dev && __test "Updated composer" 2>/dev/null || __fail "Composer issues"
    ./vendor/bin/phinx migrate -e $qarepo
    grunt dist && __test "Executed grunt"
    echo -e "PASSED:\n$Checks"
}

clearc() {
    (cd /tmp/templateCache/1 && rm -rf ${qasite}.allbeauty.com && echo -e "\n\nCached content $(ls -l)") && __test "Cleared cache" || __fail "Clear cache"
}

reindex() {
    d1="$(date)"
    echo -e "For complete reset, run;\nphp cron/generateProductAvailability.php\nphp cron/regenerateCatalogues.php\ncron/generateAlgoliaIndices.php force\n"
    clearc
    INDICES="$WORKDIR/storage/dd_Algolia*"
    cd $WORKDIR
    rm -rf $INDICES
    find $INDICES 2>/dev/null && __fail "$INDICES still remain"
    echo "Regenerating $(grep 'indexName' config.json) on https://www.algolia.com/apps/VS22L5JM4O/explorer/indices"
    php cron/generateAlgoliaIndices.php force
    echo -e "Started: $d1\nStopped: $(date)"
}

importCatalog() {
    read -p "Update $qasite with latest production catagloue data?"
    rm -rf storage/dd_Algolia* /tmp/templateCache/1/*
    php cron/importCatalogueData.php
    php cron/generateProductAvailability.php
    php cron/generateAlgoliaIndices.php force
    php cron/regenerateCatalogues.php
}

logs() {
    clear
    echo "Last ten logs updated..."
    ls -ltr /var/log/httpd/* | tail -10
    errlog="$(ls -tr /var/log/httpd/* | grep "error" | tail -1)"
    echo -e "\n<CR> to tail (or 'O' to open) $errlog ?";read OtO
    [[ "$OtO" =~ ^(O|o)$ ]] && vim $errlog || (echo "Tailing..." && tail -f $errlog)
}


help() {
    echo -e "\nUsage: $0 [Option]\n\nOptions;"
    declare -F | grep -v "__" | sed -e "s/^declare -f /\t/g" 
    echo -e "\nWORKDIR: $WORKDIR\nSERVER.: $qasite\nINDEXES: $qarepo"
}


# Declarations
Checks=""
: ${defaultbranch='develop'}
: ${WORKDIR='/home/deploy/toska'}
[ ! -f $WORKDIR/config.json ] && echo "Missing $WORKDIR/config.json" && exit 2
qasite=$(cat /home/deploy/toska/config.json | egrep "website" | head -1 | sed -e 's/\..*, *$//g' -e 's/^..*"//g')
qarepo=$(cat /home/deploy/toska/config.json | egrep "indexName" | head -1 | sed -e 's/_..*, *$//g' -e 's/^..*"//g')


# Execution
[ -z "$1" ] && help || eval $1 $@
